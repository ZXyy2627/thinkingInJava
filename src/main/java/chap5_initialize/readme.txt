总结：
第五章  初始化与清理
1.什么是构造器？
    构造器是对象初始化的方法
作用：为了确保对象的初始化。
    如何使用构造器？
    构造器注意事项：
        ①构造器与类名相同
        ②构造器没有返回值，甚至没有void

2.构造器的重载是为了以不同的方式初始化对象
    new Student();/new Student("zhangsan");  两种不同的方式初始化对象。

3.构造器可以重载，传递不同的参数。
    ①当传递的实际参数类型小于形参的类型时，会进行自动类型提升
    ②当传递的实际参数类型大于形参的类型时，会需要进行强制类型转换。
    注意事项：在①中，如果是基本类型参数，并且不是char类型的值，会一级一级的向上提升，但是如果是char类型的值，
        它会直接从char类型提升至int类型

4.方法的返回值类型不同，不能区分重载。
    重载的区分条件：方法名相同，参数列表不同：
        参数列表代表，参数的个数，参数的类型，甚至还有参数的顺序，但是一般情况下，不要把参数的顺序作为区分的条件，
        会造成误解。

5.this关键字代表当前对象的引用

6.this可以用于在一个构造器中调用另一个构造器
    public Student(){
        this(name,age);
        this.birthday = birthday;
    }
    类似上面的方式，就是在调用Student类还有两个参数的构造器。
    注意事项：
        ①在构造器内部调用使用this调用另一个构造器，那么该条语句必须写在当前构造器内的第一行
        ②只能使用一次，在一个构造器内，不允许使用this调用构造器两次或更多

7.static方法中不能使用this，非静态的可以访问静态的，但是静态的不能访问非静态的域或方法

8.成员变量在调用构造器前就已经初始化了

9.按照成员变量的顺序初始化，无论它定义在类中的什么地方

10.static修饰的成员变量，在类加载时就已经初始化了，也就是在调用构造器前初始化的，并且静态的成员变量只加载一次

11.数组定义的三种方式：
    ① int[] a = {1,2,3};
    ② int b[] = new int[10];
    ③ int[] c = new int[]{1,2,3,4,5};

12.可变参数列表就是一个对象数组。

13.在一个类中，最好只有一个重载的可变参数列表的方法，要么就没有

14.enum 是枚举类型，枚举就是常量，条件分支语句switch...case 和enum搭配是绝配

15.enum中有一个静态的方法values(),返回该enum的所有值的数组

16.enum中还有一个方法ordinal()，返回这个枚举元素在枚举类型中定义的顺序，也就是第几个被定义的。